(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{110:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var f=n(30),o=n(362);class c extends o.a{constructor(e){super(),this.__debug=!0,this.tronweb=null,this.based_version=f.version,this.tronweb=e}static Instance(){if(window&&window.hasOwnProperty("___contract__Swex__")){const e=window.___contract__Swex__;return e}return!1}async init(e){this.contract=await new f.Contract(this.tronweb,c.ABI(),e),this.contract_address_t=e,this.fee=1e8,window&&!window.hasOwnProperty("___contract__Swex__")&&(window.___contract__Swex__=this)}setGasFeeLimit(u){this.fee=u}setDebug(e){this.__debug=e}isVersionCompatible(){return this.based_version===this.tronweb.version}async APIAccountSummary(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},n=await this.contract.APIAccountSummary(e).call(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® APIAccountSummary"),console.log(n),console.groupEnd()),n}async APIaccountValue(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},n=await this.contract.APIaccountValue(e).call(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® APIaccountValue"),console.log(n),console.groupEnd()),n}async SeeActivePlan(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},n=await this.contract.SeeActivePlan(e).call(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® SeeActivePlan"),console.log(n),console.groupEnd()),n}async SeeMyAccountSummary(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.SeeMyAccountSummary().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® SeeMyAccountSummary"),console.log(t),console.groupEnd()),t}async SeeMyAccountToken(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},n=await this.contract.SeeMyAccountToken(e).call(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® SeeMyAccountToken"),console.log(n),console.groupEnd()),n}async SeeMyAccountUSDValue(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.SeeMyAccountUSDValue().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® SeeMyAccountUSDValue"),console.log(t),console.groupEnd()),t}async SeeMyPlanHash(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},n=await this.contract.SeeMyPlanHash(e).call(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® SeeMyPlanHash"),console.log(n),console.groupEnd()),n}async SeeMyPlanToken(e,t){let n={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},f=await this.contract.SeeMyPlanToken(e,t).call(n);return this.__debug&&(console.group("==> debug return raw ðŸ’® SeeMyPlanToken"),console.log(f),console.groupEnd()),f}async SeePlanSummary(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},n=await this.contract.SeePlanSummary(e).call(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® SeePlanSummary"),console.log(n),console.groupEnd()),n}async SeePoolSize(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},n=await this.contract.SeePoolSize(e).call(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® SeePoolSize"),console.log(n),console.groupEnd()),n}async TestTime(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.TestTime().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® TestTime"),console.log(t),console.groupEnd()),t}async addGov(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.addGov(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® addGov"),console.log(n),console.groupEnd()),n}async addLocker(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.addLocker(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® addLocker"),console.log(n),console.groupEnd()),n}async addWhitelistAdmin(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.addWhitelistAdmin(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® addWhitelistAdmin"),console.log(n),console.groupEnd()),n}async compareStr(e,t){let n={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},f=await this.contract.compareStr(e,t).call(n);return this.__debug&&(console.group("==> debug return raw ðŸ’® compareStr"),console.log(f),console.groupEnd()),f}async contractOpenTime(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.contractOpenTime().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® contractOpenTime"),console.log(t),console.groupEnd()),t}async disco(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},n=await this.contract.disco(e).call(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® disco"),console.log(n),console.groupEnd()),n}async exitPlan(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.exitPlan(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® exitPlan"),console.log(n),console.groupEnd()),n}async fullNetPowerCal(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.fullNetPowerCal().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® fullNetPowerCal"),console.log(t),console.groupEnd()),t}async full_net_biz_power(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.full_net_biz_power().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® full_net_biz_power"),console.log(t),console.groupEnd()),t}async installFamJustSwapExchange(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.installFamJustSwapExchange(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® installFamJustSwapExchange"),console.log(n),console.groupEnd()),n}async installMainStreamToken(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.installMainStreamToken(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® installMainStreamToken"),console.log(n),console.groupEnd()),n}async installMiningToken(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.installMiningToken(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® installMiningToken"),console.log(n),console.groupEnd()),n}async installPccToken(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.installPccToken(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® installPccToken"),console.log(n),console.groupEnd()),n}async installPriceAggregatorTRX(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.installPriceAggregatorTRX(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® installPriceAggregatorTRX"),console.log(n),console.groupEnd()),n}async installPriceOracle(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.installPriceOracle(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® installPriceOracle"),console.log(n),console.groupEnd()),n}async installReferralSystem(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.installReferralSystem(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® installReferralSystem"),console.log(n),console.groupEnd()),n}async installSwPlans(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.installSwPlans(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® installSwPlans"),console.log(n),console.groupEnd()),n}async installWithdraw(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.installWithdraw(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® installWithdraw"),console.log(n),console.groupEnd()),n}async installedBenefit(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.installedBenefit().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® installedBenefit"),console.log(t),console.groupEnd()),t}async installedJustSwap(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.installedJustSwap().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® installedJustSwap"),console.log(t),console.groupEnd()),t}async installedPriceOracle(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.installedPriceOracle().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® installedPriceOracle"),console.log(t),console.groupEnd()),t}async installedReferralSystem(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.installedReferralSystem().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® installedReferralSystem"),console.log(t),console.groupEnd()),t}async installedSwPlans(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.installedSwPlans().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® installedSwPlans"),console.log(t),console.groupEnd()),t}async isGov(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},n=await this.contract.isGov(e).call(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® isGov"),console.log(n),console.groupEnd()),n}async isLocked(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.isLocked().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® isLocked"),console.log(t),console.groupEnd()),t}async isLocker(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},n=await this.contract.isLocker(e).call(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® isLocker"),console.log(n),console.groupEnd()),n}async isOwner(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.isOwner().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® isOwner"),console.log(t),console.groupEnd()),t}async isWhitelistAdmin(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},n=await this.contract.isWhitelistAdmin(e).call(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® isWhitelistAdmin"),console.log(n),console.groupEnd()),n}async liquidityMining(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.liquidityMining(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® liquidityMining"),console.log(n),console.groupEnd()),n}async lock(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},t=await this.contract.lock().send(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® lock"),console.log(t),console.groupEnd()),t}async name(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.name().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® name"),console.log(t),console.groupEnd()),t}async owner(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.owner().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® owner"),console.log(t),console.groupEnd()),t}async pccTokenAddress(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.pccTokenAddress().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® pccTokenAddress"),console.log(t),console.groupEnd()),t}async real_network_power(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.real_network_power().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® real_network_power"),console.log(t),console.groupEnd()),t}async removeGov(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.removeGov(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® removeGov"),console.log(n),console.groupEnd()),n}async removeLocker(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.removeLocker(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® removeLocker"),console.log(n),console.groupEnd()),n}async removeWhitelistAdmin(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.removeWhitelistAdmin(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® removeWhitelistAdmin"),console.log(n),console.groupEnd()),n}async renounceOwnership(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},t=await this.contract.renounceOwnership().send(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® renounceOwnership"),console.log(t),console.groupEnd()),t}async retreat(e,t,n){let f={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},o=await this.contract.retreat(e,t,n).send(f);return this.__debug&&(console.group("==> debug return raw ðŸ’® retreat"),console.log(o),console.groupEnd()),o}async rid(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.rid().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® rid"),console.log(t),console.groupEnd()),t}async seeMiningTokenAddress(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.seeMiningTokenAddress().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® seeMiningTokenAddress"),console.log(t),console.groupEnd()),t}async stakeFi(e,t,n,base,f,o){let c={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},d=await this.contract.stakeFi(e,t,n,base,f,o).send(c);return this.__debug&&(console.group("==> debug return raw ðŸ’® stakeFi"),console.log(d),console.groupEnd()),d}async stakeFiContinue(e,t,n,base){let f={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},o=await this.contract.stakeFiContinue(e,t,n,base).send(f);return this.__debug&&(console.group("==> debug return raw ðŸ’® stakeFiContinue"),console.log(o),console.groupEnd()),o}async sysOut(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.sysOut().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® sysOut"),console.log(t),console.groupEnd()),t}async takeCoin(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.takeCoin(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® takeCoin"),console.log(n),console.groupEnd()),n}async total_trns(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.total_trns().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® total_trns"),console.log(t),console.groupEnd()),t}async total_yield(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.total_yield().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® total_yield"),console.log(t),console.groupEnd()),t}async transferOwnership(e){let t={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},n=await this.contract.transferOwnership(e).send(t);return this.__debug&&(console.group("==> debug return raw ðŸ’® transferOwnership"),console.log(n),console.groupEnd()),n}async unlock(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!1,callValue:0},t=await this.contract.unlock().send(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® unlock"),console.log(t),console.groupEnd()),t}async usdt_decimal(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.usdt_decimal().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® usdt_decimal"),console.log(t),console.groupEnd()),t}async virtual_net_hash(){let e={userFeePercentage:30,feeLimit:this.fee,shouldPollResponse:!0,_isConstant:!0,callValue:0},t=await this.contract.virtual_net_hash().call(e);return this.__debug&&(console.group("==> debug return raw ðŸ’® virtual_net_hash"),console.log(t),console.groupEnd()),t}async eventQ(e,t,n=0){return await this.tronweb&&this.contract&&this.tronweb.getEventResult(this.contract_address_t,n,e,0,20,t)}async startEventListeners(){await this.contract&&this.contract.AssetTokenInstall().watch(((e,t)=>{if(e)return console.error("Failed to bind event listener:",e);if(t){let{result:e,block:n,transaction:f,name:o,contract:c}=t;this.__debug&&(console.group("New event received"),console.log("- Contract Address:",c),console.log("- Event Name:",o),console.log("- Transaction:",f),console.log("- Block number:",n),console.log("- Result:",e,"\n"),console.groupEnd()),this.emit("event_AssetTokenInstall",t)}})),await this.contract&&this.contract.Error().watch(((e,t)=>{if(e)return console.error("Failed to bind event listener:",e);if(t){let{result:e,block:n,transaction:f,name:o,contract:c}=t;this.__debug&&(console.group("New event received"),console.log("- Contract Address:",c),console.log("- Event Name:",o),console.log("- Transaction:",f),console.log("- Block number:",n),console.log("- Result:",e,"\n"),console.groupEnd()),this.emit("event_Error",t)}})),await this.contract&&this.contract.Farmed().watch(((e,t)=>{if(e)return console.error("Failed to bind event listener:",e);if(t){let{result:e,block:n,transaction:f,name:o,contract:c}=t;this.__debug&&(console.group("New event received"),console.log("- Contract Address:",c),console.log("- Event Name:",o),console.log("- Transaction:",f),console.log("- Block number:",n),console.log("- Result:",e,"\n"),console.groupEnd()),this.emit("event_Farmed",t)}})),await this.contract&&this.contract.MineFail().watch(((e,t)=>{if(e)return console.error("Failed to bind event listener:",e);if(t){let{result:e,block:n,transaction:f,name:o,contract:c}=t;this.__debug&&(console.group("New event received"),console.log("- Contract Address:",c),console.log("- Event Name:",o),console.log("- Transaction:",f),console.log("- Block number:",n),console.log("- Result:",e,"\n"),console.groupEnd()),this.emit("event_MineFail",t)}})),await this.contract&&this.contract.MineWithdraw().watch(((e,t)=>{if(e)return console.error("Failed to bind event listener:",e);if(t){let{result:e,block:n,transaction:f,name:o,contract:c}=t;this.__debug&&(console.group("New event received"),console.log("- Contract Address:",c),console.log("- Event Name:",o),console.log("- Transaction:",f),console.log("- Block number:",n),console.log("- Result:",e,"\n"),console.groupEnd()),this.emit("event_MineWithdraw",t)}})),await this.contract&&this.contract.MiningTokenContractUpdate().watch(((e,t)=>{if(e)return console.error("Failed to bind event listener:",e);if(t){let{result:e,block:n,transaction:f,name:o,contract:c}=t;this.__debug&&(console.group("New event received"),console.log("- Contract Address:",c),console.log("- Event Name:",o),console.log("- Transaction:",f),console.log("- Block number:",n),console.log("- Result:",e,"\n"),console.groupEnd()),this.emit("event_MiningTokenContractUpdate",t)}})),await this.contract&&this.contract.ModuleInstall().watch(((e,t)=>{if(e)return console.error("Failed to bind event listener:",e);if(t){let{result:e,block:n,transaction:f,name:o,contract:c}=t;this.__debug&&(console.group("New event received"),console.log("- Contract Address:",c),console.log("- Event Name:",o),console.log("- Transaction:",f),console.log("- Block number:",n),console.log("- Result:",e,"\n"),console.groupEnd()),this.emit("event_ModuleInstall",t)}})),await this.contract&&this.contract.OwnershipTransferred().watch(((e,t)=>{if(e)return console.error("Failed to bind event listener:",e);if(t){let{result:e,block:n,transaction:f,name:o,contract:c}=t;this.__debug&&(console.group("New event received"),console.log("- Contract Address:",c),console.log("- Event Name:",o),console.log("- Transaction:",f),console.log("- Block number:",n),console.log("- Result:",e,"\n"),console.groupEnd()),this.emit("event_OwnershipTransferred",t)}})),await this.contract&&this.contract.RetreatMine().watch(((e,t)=>{if(e)return console.error("Failed to bind event listener:",e);if(t){let{result:e,block:n,transaction:f,name:o,contract:c}=t;this.__debug&&(console.group("New event received"),console.log("- Contract Address:",c),console.log("- Event Name:",o),console.log("- Transaction:",f),console.log("- Block number:",n),console.log("- Result:",e,"\n"),console.groupEnd()),this.emit("event_RetreatMine",t)}})),await this.contract&&this.contract.Stake().watch(((e,t)=>{if(e)return console.error("Failed to bind event listener:",e);if(t){let{result:e,block:n,transaction:f,name:o,contract:c}=t;this.__debug&&(console.group("New event received"),console.log("- Contract Address:",c),console.log("- Event Name:",o),console.log("- Transaction:",f),console.log("- Block number:",n),console.log("- Result:",e,"\n"),console.groupEnd()),this.emit("event_Stake",t)}})),await this.contract&&this.contract.StakeBegin().watch(((e,t)=>{if(e)return console.error("Failed to bind event listener:",e);if(t){let{result:e,block:n,transaction:f,name:o,contract:c}=t;this.__debug&&(console.group("New event received"),console.log("- Contract Address:",c),console.log("- Event Name:",o),console.log("- Transaction:",f),console.log("- Block number:",n),console.log("- Result:",e,"\n"),console.groupEnd()),this.emit("event_StakeBegin",t)}})),await this.contract&&this.contract.debugUpdateBusinessPow().watch(((e,t)=>{if(e)return console.error("Failed to bind event listener:",e);if(t){let{result:e,block:n,transaction:f,name:o,contract:c}=t;this.__debug&&(console.group("New event received"),console.log("- Contract Address:",c),console.log("- Event Name:",o),console.log("- Transaction:",f),console.log("- Block number:",n),console.log("- Result:",e,"\n"),console.groupEnd()),this.emit("event_debugUpdateBusinessPow",t)}})),await this.contract&&this.contract.debugpow().watch(((e,t)=>{if(e)return console.error("Failed to bind event listener:",e);if(t){let{result:e,block:n,transaction:f,name:o,contract:c}=t;this.__debug&&(console.group("New event received"),console.log("- Contract Address:",c),console.log("- Event Name:",o),console.log("- Transaction:",f),console.log("- Block number:",n),console.log("- Result:",e,"\n"),console.groupEnd()),this.emit("event_debugpow",t)}})),await this.contract&&this.contract.traillock().watch(((e,t)=>{if(e)return console.error("Failed to bind event listener:",e);if(t){let{result:e,block:n,transaction:f,name:o,contract:c}=t;this.__debug&&(console.group("New event received"),console.log("- Contract Address:",c),console.log("- Event Name:",o),console.log("- Transaction:",f),console.log("- Block number:",n),console.log("- Result:",e,"\n"),console.groupEnd()),this.emit("event_traillock",t)}}))}static ABI(){return[{inputs:[],outputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{name:"m0",type:"address",indexed:!1}],name:"AssetTokenInstall",outputs:[],type:"event"},{anonymous:!1,inputs:[{name:"m0",type:"address",indexed:!1},{name:"error_code",type:"uint256",indexed:!1}],name:"Error",outputs:[],type:"event"},{anonymous:!1,inputs:[{name:"m0",type:"address",indexed:!1},{name:"plan",type:"uint256",indexed:!1}],name:"Farmed",outputs:[],type:"event"},{anonymous:!1,inputs:[{name:"id",type:"uint256",indexed:!1}],name:"MineFail",outputs:[],type:"event"},{anonymous:!1,inputs:[{name:"id",type:"uint256",indexed:!1},{name:"allowance",type:"uint256",indexed:!1}],name:"MineWithdraw",outputs:[],type:"event"},{anonymous:!1,inputs:[{name:"m0",type:"address",indexed:!1},{name:"totalsupply",type:"uint256",indexed:!1}],name:"MiningTokenContractUpdate",outputs:[],type:"event"},{anonymous:!1,inputs:[{name:"m0",type:"address",indexed:!1}],name:"ModuleInstall",outputs:[],type:"event"},{anonymous:!1,inputs:[{name:"previousOwner",type:"address",indexed:!0},{name:"newOwner",type:"address",indexed:!0}],name:"OwnershipTransferred",outputs:[],type:"event"},{anonymous:!1,inputs:[{name:"m0",type:"address",indexed:!1},{name:"coin",type:"address",indexed:!1},{name:"amount",type:"uint256",indexed:!1}],name:"RetreatMine",outputs:[],type:"event"},{anonymous:!1,inputs:[{name:"acc",type:"uint256",indexed:!1},{name:"m0",type:"address",indexed:!1},{name:"m1",type:"address",indexed:!1},{name:"amount",type:"uint256",indexed:!1}],name:"Stake",outputs:[],type:"event"},{anonymous:!1,inputs:[{name:"m0",type:"address",indexed:!1},{name:"plan",type:"uint256",indexed:!1}],name:"StakeBegin",outputs:[],type:"event"},{anonymous:!1,inputs:[{name:"upline_user_id",type:"uint256",indexed:!1},{name:"fbp",type:"uint256",indexed:!1},{name:"bp",type:"uint256",indexed:!1}],name:"debugUpdateBusinessPow",outputs:[],type:"event"},{anonymous:!1,inputs:[{name:"me_user",type:"address",indexed:!1},{name:"previous_hash",type:"uint256",indexed:!1},{name:"hash_new",type:"uint256",indexed:!1}],name:"debugpow",outputs:[],type:"event"},{anonymous:!1,inputs:[{name:"value",type:"uint8",indexed:!1}],name:"traillock",outputs:[],type:"event"},{constant:!0,inputs:[{name:"_user",type:"address"}],name:"APIAccountSummary",outputs:[{name:"mt",type:"uint256[9]"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"owner",type:"address"}],name:"APIaccountValue",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"plan",type:"uint256"}],name:"SeeActivePlan",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"SeeMyAccountSummary",outputs:[{name:"mt",type:"uint256[9]"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"specific",type:"address"}],name:"SeeMyAccountToken",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"SeeMyAccountUSDValue",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"planID",type:"uint256"}],name:"SeeMyPlanHash",outputs:[{name:"hash_x",type:"uint256"},{name:"hash_pcc",type:"uint256"},{name:"hash_fam",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"plan",type:"uint256"},{name:"specific",type:"address"}],name:"SeeMyPlanToken",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"plan",type:"uint256"}],name:"SeePlanSummary",outputs:[{name:"h",type:"uint256[12]"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"coin_address",type:"address"}],name:"SeePoolSize",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"TestTime",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"account",type:"address"}],name:"addGov",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"account",type:"address"}],name:"addLocker",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"account",type:"address"}],name:"addWhitelistAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"src",type:"string"},{name:"src_compared",type:"string"}],name:"compareStr",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"pure",type:"function"},{constant:!0,inputs:[],name:"contractOpenTime",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"ipx",type:"uint256"}],name:"disco",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function"},{constant:!1,inputs:[{name:"plan",type:"uint256"}],name:"exitPlan",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"fullNetPowerCal",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"full_net_biz_power",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"deploymentAddress",type:"address"}],name:"installFamJustSwapExchange",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_address_ok",type:"address"}],name:"installMainStreamToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"deploymentAddress",type:"address"}],name:"installMiningToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"deploy_address",type:"address"}],name:"installPccToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"addressLoc",type:"address"}],name:"installPriceAggregatorTRX",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"deploymentAddress",type:"address"}],name:"installPriceOracle",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"addressLoc",type:"address"}],name:"installReferralSystem",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"deploymentAddress",type:"address"}],name:"installSwPlans",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"address_collector",type:"address"}],name:"installWithdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"installedBenefit",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"installedJustSwap",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"installedPriceOracle",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"installedReferralSystem",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"installedSwPlans",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"account",type:"address"}],name:"isGov",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"isLocked",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"account",type:"address"}],name:"isLocker",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"isOwner",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"account",type:"address"}],name:"isWhitelistAdmin",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"plan",type:"uint256"}],name:"liquidityMining",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[],name:"lock",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"pccTokenAddress",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"real_network_power",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"account",type:"address"}],name:"removeGov",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"account",type:"address"}],name:"removeLocker",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"account",type:"address"}],name:"removeWhitelistAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"plan",type:"uint256"},{name:"claim_coin",type:"uint256"},{name:"_coin",type:"address"}],name:"retreat",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"rid",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"seeMiningTokenAddress",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"amount",type:"uint256[]"},{name:"stake_token",type:"address[]"},{name:"ids",type:"uint32"},{name:"base",type:"uint256"},{name:"lock_duration",type:"uint256"},{name:"refer",type:"address"}],name:"stakeFi",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"amount",type:"uint256[]"},{name:"stake_token",type:"address[]"},{name:"ids",type:"uint32"},{name:"base",type:"uint256"}],name:"stakeFiContinue",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"sysOut",outputs:[{name:"ins",type:"uint256[9]"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"plan",type:"uint256"}],name:"takeCoin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"total_trns",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"total_yield",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[],name:"unlock",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"usdt_decimal",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"virtual_net_hash",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}]}}c.deployedBytecode="",c.contractName="Swex"}}]);